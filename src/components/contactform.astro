---
import Button from "./ui/button.astro";
---
<form
  id="form"
  class="needs-validation"
  novalidate>
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />

  <!-- First Name and Last Name in a row -->
  <div class="flex gap-4 mb-5">
    <div class="w-1/2">
      <input
        type="text"
        placeholder="First Name"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="first_name"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your first name.
      </div>
    </div>
    <div class="w-1/2">
      <input
        type="text"
        placeholder="Last Name"
        required
        class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
        name="last_name"
      />
      <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
        Please provide your last name.
      </div>
    </div>
  </div>


  <div class="mb-5">
    <label for="email_address" class="sr-only">Email Address</label><input
    id="email_address"
    type="email"
    placeholder="Email Address"
    name="email"
    required
    class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
  />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Please provide your email address.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Please provide a valid email address.
    </div>
  </div>

  <Button type="submit" size="lg" block>Join Waitlist</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
    .invalid-feedback,
    .empty-feedback {
        display: none;
    }

    .was-validated :placeholder-shown:invalid ~ .empty-feedback {
        display: block;
    }

    .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
        display: block;
    }

    .is-invalid,
    .was-validated :invalid {
        border-color: #dc3545;
    }

    .flex {
        display: flex;
        gap: 1rem;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .flex-1 {
        flex: 1 1 50%;
    }
</style>
<script is:inline>
  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form.addEventListener("submit", function(e) {
    e.preventDefault();
    form.classList.add("was-validated");

    // Check form validation
    if (!form.checkValidity()) {
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }

    // Gather form data
    const formData = new FormData(form);

    firstName = formData.get("first_name");
    lastName = formData.get("last_name");
    email = formData.get("email");

    result.classList.add("text-blue-400");
    result.innerHTML = "Sending...";

    fetch(`/api/submitForm?firstName=${firstName}&lastName=${lastName}&email=${email}`, {
      method: "GET"
    })
      .then((response) => {
        if (response.ok) {
          result.classList.remove("text-blue-400");
          result.classList.add("text-green-500");
          result.innerHTML = "Thank you for your interest.";
          form.reset();
          form.classList.remove("was-validated");
          setTimeout(() => {
            result.style.display = "none";
          }, 5000);
        } else {
          result.classList.remove("text-blue-400");
          result.classList.add("text-red-500");
          result.innerHTML = "Something went wrong, please try again.";
        }
      })
      .catch((error) => {
        console.log(error);
        result.classList.remove("text-blue-400");
        result.classList.add("text-red-500");
        result.innerHTML = "Something went wrong, please try again.";
      });
  });
</script>
